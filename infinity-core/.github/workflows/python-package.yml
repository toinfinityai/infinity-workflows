# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev
    - name: Install package
      run: poetry install --no-interaction --with dev
    - name: Check format with black
      run: |
        poetry run black --force-exclude docs --line-length 120 --diff --check $(git ls-files '*.py')
    - name: Type checking with mypy
      run: |
        poetry run mypy --strict $(git ls-files '*.py')
    - name: Sort imports with isort
      run: |
        poetry run isort --line-length 120 --diff $(git ls-files '*.py')
    #- name: Lint with flake8
    #  run: |
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --max-line-length 120 --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --exclude ./docs
    - name: Run unit tests with pytest
      run: |
        poetry run pytest -m "not integration"
